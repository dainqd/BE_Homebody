{
    "openapi": "3.0.0",
    "info": {
        "title": "HomeBody Glam API",
        "version": "3.0"
    },
    "paths": {
        "/api/coupons/list": {
            "get": {
                "tags": [
                    "Coupon"
                ],
                "summary": "Get list of all active coupons",
                "description": "Get list of all active coupons",
                "operationId": "a8bab51a4de07007dd408cd552ae241e",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/api/coupons/search": {
            "get": {
                "tags": [
                    "Coupon"
                ],
                "summary": "Search coupon by code or name",
                "description": "Search coupon by code or name",
                "operationId": "a0ff40af5c2f5dc2fb888f98c15e1903",
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Code",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "No coupon found!"
                    }
                }
            }
        },
        "/api/coupons/detail/{id}": {
            "get": {
                "tags": [
                    "Coupon"
                ],
                "summary": "Get detail of a coupon",
                "description": "Get detail of a coupon",
                "operationId": "849aa4d6254f17cd97ef2125f25c582d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Coupon ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "No coupon found!"
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User login",
                "description": "User login",
                "operationId": "903626fe9a0cd6d42db6e883d556bc2e",
                "requestBody": {
                    "description": "User login info",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "login_request",
                                    "password"
                                ],
                                "properties": {
                                    "login_request": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "Passw0rd"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "full_name": {
                                            "type": "string",
                                            "example": "Nguyen Van A"
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "user@example.com"
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "123456789"
                                        },
                                        "role": {
                                            "type": "string",
                                            "example": "admin"
                                        },
                                        "accessToken": {
                                            "type": "string",
                                            "example": "abcxyz1234567890"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Th  t b i, Vui l ng ki m tra l i t i kho n ho c m t kh u!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "description": "Register a new user",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Nguy n V n A"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "nguyenvana@gmail.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "0123456789"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "123456"
                                    },
                                    "password_confirm": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Register success!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email invalid!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories/list": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get list of categories",
                "description": "Get list of categories",
                "operationId": "26b0ff6a11a2fdd2d4fb1d27b1ff7e3b",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                }
            }
        },
        "/api/categories/detail/{id}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get detail of a category",
                "description": "Get detail of a category",
                "operationId": "940b02d4b56c54ed345563410c211182",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            }
        },
        "/api/partner/register": {
            "post": {
                "tags": [
                    "Partner"
                ],
                "summary": "Send a request to become a partner",
                "description": "Send a request to become a partner",
                "operationId": "54a17cdabff4aff4c5cf4e5a2d51a12b",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name of the partner",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "Email of the partner",
                                        "type": "string",
                                        "example": "john@example.com"
                                    },
                                    "phone": {
                                        "description": "Phone of the partner",
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "password": {
                                        "description": "Password of the partner",
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "password_confirm": {
                                        "description": "Password confirmation of the partner",
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Partner request sent successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/search/user": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Search user by keyword, price range, and location",
                "operationId": "33a755c4579789e3ad52da16c79cec1d",
                "parameters": [
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword to search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "minPrice",
                        "in": "query",
                        "description": "Minimum price",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "maxPrice",
                        "in": "query",
                        "description": "Maximum price",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "province_id",
                        "in": "query",
                        "description": "Province ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "district_id",
                        "in": "query",
                        "description": "District ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "commune_id",
                        "in": "query",
                        "description": "Commune ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "size",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/services/list": {
            "get": {
                "tags": [
                    "Service"
                ],
                "summary": "List all services",
                "description": "List all services",
                "operationId": "2a2d7d6c2f0a09c4eaae9b4d1b0bd9cd",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/services/detail/{id}": {
            "get": {
                "tags": [
                    "Service"
                ],
                "summary": "Get detail of a service",
                "description": "Get detail of a service",
                "operationId": "db44b8d3636641a3dc114e4559aeaa21",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/admin/categories/list": {
            "get": {
                "tags": [
                    "Admin Category"
                ],
                "summary": "Get list of categories",
                "description": "Get list of categories",
                "operationId": "d54a9836418a10f52885f6da5c62c9c0",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                }
            }
        },
        "/api/admin/categories/detail/{id}": {
            "get": {
                "tags": [
                    "Admin Category"
                ],
                "summary": "Get detail of a category",
                "description": "Get detail of a category",
                "operationId": "190810ac0ac47d830156c882d3f9a6c8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            }
        },
        "/api/admin/categories/create": {
            "post": {
                "tags": [
                    "Admin Category"
                ],
                "summary": "Create category",
                "description": "Create category",
                "operationId": "617af3c76c0cd64f7c42aea8ed46907d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name of the category",
                                        "type": "string"
                                    },
                                    "parent_id": {
                                        "description": "Parent category ID",
                                        "type": "integer"
                                    },
                                    "status": {
                                        "description": "Status of the category",
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2,
                                            3
                                        ]
                                    },
                                    "thumbnail": {
                                        "description": "Thumbnail of the category",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                }
            }
        },
        "/api/admin/categories/update/{id}": {
            "put": {
                "tags": [
                    "Admin Category"
                ],
                "summary": "Update a category",
                "description": "Update a category",
                "operationId": "3ebee98e05c2e7c66b744d76ecda2950",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name of the category",
                                        "type": "string"
                                    },
                                    "parent_id": {
                                        "description": "Parent category ID",
                                        "type": "integer"
                                    },
                                    "status": {
                                        "description": "Status of the category",
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2,
                                            3
                                        ]
                                    },
                                    "thumbnail": {
                                        "description": "Thumbnail of the category",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            }
        },
        "/admin/categories/{id}": {
            "delete": {
                "tags": [
                    "Admin Category"
                ],
                "summary": "Delete a category",
                "description": "Delete a category",
                "operationId": "95ecc4d1f5cf9700cb9131453b055d1d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                }
            }
        },
        "/api/admin/coupons/list": {
            "get": {
                "tags": [
                    "Coupon"
                ],
                "summary": "Get list of all coupons",
                "description": "Get list of all coupons",
                "operationId": "62eb5267acc4610928daf9be4c404127",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/api/admin/coupons/detail/{id}": {
            "get": {
                "tags": [
                    "Coupon"
                ],
                "summary": "Get detail of a coupon",
                "description": "Get detail of a coupon",
                "operationId": "704c43a09a2709b7a0f36133f196fccf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Coupon ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "No coupon found!"
                    }
                }
            }
        },
        "/api/admin/coupons/create": {
            "post": {
                "tags": [
                    "Coupon"
                ],
                "summary": "Create a new coupon",
                "description": "Create a new coupon",
                "operationId": "6600c511f656aa79bd9efcdaab06c6af",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "code": {
                                        "description": "Code",
                                        "type": "string",
                                        "example": "COUPON123"
                                    },
                                    "name": {
                                        "description": "Name",
                                        "type": "string",
                                        "example": "My Coupon"
                                    },
                                    "max_set": {
                                        "description": "Maximum amount of coupon",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "start_date": {
                                        "description": "Start date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2021-01-01"
                                    },
                                    "end_date": {
                                        "description": "End date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2021-01-31"
                                    },
                                    "percent_discount": {
                                        "description": "Percent discount",
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "status": {
                                        "description": "Status",
                                        "type": "integer",
                                        "example": "ACTIVE"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/api/admin/coupons/update/{id}": {
            "put": {
                "tags": [
                    "Coupon"
                ],
                "summary": "Update a coupon",
                "description": "Update a coupon",
                "operationId": "63a3bb449b2e6c79cf03e74598922868",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Coupon ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "code": {
                                        "description": "Code",
                                        "type": "string",
                                        "example": "SUMMER15"
                                    },
                                    "name": {
                                        "description": "Name",
                                        "type": "string",
                                        "example": "Summer 15% off"
                                    },
                                    "description": {
                                        "description": "Description",
                                        "type": "string",
                                        "example": "15% off on all orders over $100"
                                    },
                                    "percent_discount": {
                                        "description": "Percent discount",
                                        "type": "integer",
                                        "example": 15
                                    },
                                    "status": {
                                        "description": "Status",
                                        "type": "integer",
                                        "example": "ACTIVE"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "No coupon found!"
                    },
                    "400": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/api/admin/coupons/delete/{id}": {
            "delete": {
                "tags": [
                    "Coupon"
                ],
                "summary": "Delete a coupon",
                "description": "Delete a coupon",
                "operationId": "5fb4a5e1681592cb4cbe111b2057aa50",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Coupon ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "No coupon found!"
                    },
                    "400": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/api/admin/partner-register/list": {
            "get": {
                "tags": [
                    "Admin Partner Register"
                ],
                "summary": "Get all partner registers",
                "description": "Get all partner registers",
                "operationId": "566a49914a59b344c09ac0110985738a",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "john@example.com"
                                                    },
                                                    "phone": {
                                                        "type": "string",
                                                        "example": "123 456 7890"
                                                    },
                                                    "status": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2022-01-01 00:00:00"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/admin/partner-register/detail/{id}": {
            "get": {
                "tags": [
                    "Admin Partner Register"
                ],
                "summary": "Get partner detail by id",
                "description": "Get partner detail by id",
                "operationId": "getPartnerDetailById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of partner",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "john@example.com"
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "123 456 7890"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2022-01-01 00:00:00"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Partner not found"
                    }
                }
            }
        },
        "/api/admin/partner-register/update/{id}": {
            "put": {
                "tags": [
                    "Admin Partner Register"
                ],
                "summary": "Update a partner register status",
                "description": "Update a partner register status",
                "operationId": "updatePartnerRegisterStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of partner",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Partner register status to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "description": "Status of the partner register",
                                        "type": "string",
                                        "enum": [
                                            "APPROVED",
                                            "REJECTED",
                                            "DELETED"
                                        ],
                                        "example": "APPROVED"
                                    },
                                    "update": {
                                        "description": "Update the partner register status",
                                        "type": "string",
                                        "enum": [
                                            "Y",
                                            "N"
                                        ],
                                        "example": "Y"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Partner register status updated successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Partner register not found"
                    }
                }
            }
        },
        "/api/admin/partner-register/delete/{id}": {
            "delete": {
                "tags": [
                    "Admin Partner Register"
                ],
                "summary": "Delete a partner register by ID",
                "description": "Delete a partner register by ID",
                "operationId": "98ea24b46c221a2a91587235f5773744",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of partner",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Partner register deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Partner register not found"
                    }
                }
            }
        },
        "/api/admin/users/list": {
            "get": {
                "tags": [
                    "Admin User"
                ],
                "summary": "Get all users",
                "description": "Get all users",
                "operationId": "4535d89fdc2ceafff4299f64b9849089",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Get users success!"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "user@example.com"
                                                    },
                                                    "full_name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "phone": {
                                                        "type": "string",
                                                        "example": "123 456 7890"
                                                    },
                                                    "avatar": {
                                                        "type": "string",
                                                        "example": "http://example.com/avatar.jpg"
                                                    },
                                                    "total_balance": {
                                                        "type": "integer",
                                                        "example": 10000
                                                    },
                                                    "status": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "role_name": {
                                                        "type": "string",
                                                        "example": "Admin"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/users/detail/{id}": {
            "get": {
                "tags": [
                    "Admin User"
                ],
                "summary": "Get user detail by id",
                "description": "Get user detail by id",
                "operationId": "getUserDetailById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/admin/users/create": {
            "post": {
                "tags": [
                    "Admin User"
                ],
                "summary": "Create a user",
                "description": "Create a user",
                "operationId": "ff4ff55b9a718e55c7a0a8866696b7d5",
                "requestBody": {
                    "description": "User info to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "full_name": {
                                        "type": "string",
                                        "example": "Nguy n V n A"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "nguyenvana@gmail.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "0123456789"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "123456"
                                    },
                                    "password_confirm": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create success"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/admin/users/update/{id}": {
            "post": {
                "tags": [
                    "Admin User"
                ],
                "summary": "Update a user",
                "description": "Update a user",
                "operationId": "63fb8a0ad9a6fdcc0bf89c924a0daa3e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User info to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "full_name": {
                                        "type": "string",
                                        "example": "Nguy n V n A"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "nguyenvana@gmail.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "0123456789"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "123456"
                                    },
                                    "password_confirm": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update success"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/admin/users/delete/{id}": {
            "delete": {
                "tags": [
                    "Admin User"
                ],
                "summary": "Delete a user by ID",
                "description": "Delete a user by ID",
                "operationId": "3c41fd15108122b32d3aa0b3c3c929c8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/partner/update/info": {
            "post": {
                "tags": [
                    "Partner"
                ],
                "summary": "Save partner information",
                "description": "Save partner information",
                "operationId": "6d3b694df041390c8a34b4fc65fa15e1",
                "requestBody": {
                    "description": "Partner information",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john@example.com"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "example": "Male"
                                    },
                                    "thumbnail": {
                                        "description": "Thumbnail image file",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "gallery": {
                                        "type": "array",
                                        "items": {
                                            "description": "Gallery image file",
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "longitude": {
                                        "type": "string",
                                        "example": "37.7749"
                                    },
                                    "latitude": {
                                        "type": "string",
                                        "example": "-122.4194"
                                    },
                                    "about": {
                                        "type": "string",
                                        "example": "About me"
                                    },
                                    "experience": {
                                        "type": "string",
                                        "example": "Experience"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "APPROVED"
                                    },
                                    "province_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "district_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "commune_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "tax_code": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "passport": {
                                        "description": "Passport image file",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "time_working": {
                                        "type": "string",
                                        "example": "8h-12h"
                                    },
                                    "day_working": {
                                        "type": "string",
                                        "example": "Monday"
                                    },
                                    "specialty": {
                                        "type": "string",
                                        "example": "Dentist"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Save information successfully!"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/partner/services/list": {
            "get": {
                "tags": [
                    "Partner Service"
                ],
                "summary": "List all services",
                "description": "List all services",
                "operationId": "c1a092ac36daa06ab2f4978337075a96",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    },
                    "404": {
                        "description": "Service not found"
                    }
                }
            }
        },
        "/api/partner/services/create": {
            "post": {
                "tags": [
                    "Partner Service"
                ],
                "summary": "Create a new service",
                "description": "Create a new service",
                "operationId": "dc92dd734c621d8f4ab2b52bbee10feb",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name of the service",
                                        "type": "string",
                                        "example": "Service name"
                                    },
                                    "description": {
                                        "description": "Description of the service",
                                        "type": "string",
                                        "example": "Service description"
                                    },
                                    "price": {
                                        "description": "Price of the service",
                                        "type": "integer",
                                        "example": 10000
                                    },
                                    "discount_price": {
                                        "description": "Discount price of the service",
                                        "type": "integer",
                                        "example": 8000
                                    },
                                    "time_execution": {
                                        "description": "Time execution of the service",
                                        "type": "integer",
                                        "example": 60
                                    },
                                    "display_priority": {
                                        "description": "Display priority of the service",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "usage_conditions": {
                                        "description": "Usage conditions of the service",
                                        "type": "string",
                                        "example": "Service usage conditions"
                                    },
                                    "number_of_sessions": {
                                        "description": "Number of sessions of the service",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "promotion_start": {
                                        "description": "Promotion start time of the service",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2022-01-01 00:00:00"
                                    },
                                    "promotion_end": {
                                        "description": "Promotion end time of the service",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2022-01-31 23:59:59"
                                    },
                                    "category_id": {
                                        "description": "Category ID of the service",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "thumbnail": {
                                        "description": "Thumbnail of the service",
                                        "type": "file",
                                        "example": "https://example.com/thumbnail.jpg"
                                    },
                                    "gallery": {
                                        "description": "Gallery of the service",
                                        "type": "array",
                                        "items": {
                                            "description": "Gallery of the service",
                                            "type": "file",
                                            "example": "https://example.com/gallery1.jpg"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    },
                    "404": {
                        "description": "Service not found"
                    }
                }
            }
        },
        "/api/partner/services/update/{id}": {
            "put": {
                "tags": [
                    "Partner Service"
                ],
                "summary": "Update a service by ID",
                "description": "Update a service by ID",
                "operationId": "258692265f3e34113541cd44641c78d1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name of the service",
                                        "type": "string",
                                        "example": "Service name"
                                    },
                                    "description": {
                                        "description": "Description of the service",
                                        "type": "string",
                                        "example": "Service description"
                                    },
                                    "price": {
                                        "description": "Price of the service",
                                        "type": "integer",
                                        "example": 10000
                                    },
                                    "discount_price": {
                                        "description": "Discount price of the service",
                                        "type": "integer",
                                        "example": 8000
                                    },
                                    "time_execution": {
                                        "description": "Time execution of the service",
                                        "type": "integer",
                                        "example": 60
                                    },
                                    "display_priority": {
                                        "description": "Display priority of the service",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "usage_conditions": {
                                        "description": "Usage conditions of the service",
                                        "type": "string",
                                        "example": "Service usage conditions"
                                    },
                                    "number_of_sessions": {
                                        "description": "Number of sessions of the service",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "promotion_start": {
                                        "description": "Promotion start time of the service",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2022-01-01 00:00:00"
                                    },
                                    "promotion_end": {
                                        "description": "Promotion end time of the service",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2022-01-31 23:59:59"
                                    },
                                    "category_id": {
                                        "description": "Category ID of the service",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "thumbnail": {
                                        "description": "Thumbnail of the service",
                                        "type": "file",
                                        "example": "https://example.com/thumbnail.jpg"
                                    },
                                    "gallery": {
                                        "description": "Gallery of the service",
                                        "type": "array",
                                        "items": {
                                            "description": "Gallery of the service",
                                            "type": "file",
                                            "example": "https://example.com/gallery1.jpg"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    },
                    "404": {
                        "description": "Service not found"
                    }
                }
            }
        },
        "/api/partner/services/delete/{id}": {
            "delete": {
                "tags": [
                    "Partner Service"
                ],
                "summary": "Delete a service by ID",
                "description": "Delete a service by ID",
                "operationId": "e878ebe4c5b524312d0b9786a073c480",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    },
                    "404": {
                        "description": "Service not found"
                    }
                }
            }
        },
        "/api/partner/services/detail/{id}": {
            "get": {
                "tags": [
                    "Partner Service"
                ],
                "summary": "Get detail of a service",
                "description": "Get detail of a service",
                "operationId": "a590a27cd1525ba5f72e28559be6ac2e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    },
                    "404": {
                        "description": "Service not found"
                    }
                }
            }
        },
        "/api/carts/list": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Get list cart",
                "description": "Get list cart",
                "operationId": "1ee23a46cd37c44f43638cd57a50a521",
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Error"
                    }
                }
            }
        },
        "/api/carts/add": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Add to cart",
                "description": "Add to cart",
                "operationId": "adc15c0c32a4699faae078084f5063b8",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "service_id": {
                                        "description": "Service ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quantity": {
                                        "description": "Quantity of product",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "values": {
                                        "description": "Values of service",
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Service not found!"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/carts/change-quantity/{id}": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Change quantity of a cart",
                "description": "Change quantity of a cart",
                "operationId": "5bc4040b68e51487961a63c0947bb6f6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cart ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "quantity": {
                                        "description": "Quantity of cart",
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Cart not found!"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/carts/remove/{id}": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Remove cart",
                "description": "Remove cart",
                "operationId": "4dd1fdde4c21aea75e0f699037db7437",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/carts/clear": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Clear cart",
                "description": "Clear cart",
                "operationId": "8990c499473a63630f962dd6cb406322",
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "200": {
                        "description": "Clear success"
                    },
                    "400": {
                        "description": "Error"
                    }
                }
            }
        },
        "/api/my-coupons/list": {
            "get": {
                "tags": [
                    "My Coupon"
                ],
                "summary": "Get list of my coupons",
                "description": "Get list of my coupons",
                "operationId": "365fac8b3a587e8bc752efe879e7a655",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/api/my-coupons/search": {
            "get": {
                "tags": [
                    "My Coupon"
                ],
                "summary": "Search for coupons by code or name",
                "description": "Search for coupons by code or name",
                "operationId": "debe049a37acf1c1e1fa4fb39e12538e",
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Code",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/api/my-coupons/detail/{id}": {
            "get": {
                "tags": [
                    "My Coupon"
                ],
                "summary": "Get detail of a coupon",
                "description": "Get detail of a coupon",
                "operationId": "46ec1d431a174e9a8718ba065549ea5a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Coupon ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "No coupon found!"
                    }
                }
            }
        },
        "/api/my-coupons/save": {
            "post": {
                "tags": [
                    "My Coupon"
                ],
                "summary": "Save a coupon",
                "description": "Save a coupon",
                "operationId": "f1f640e961880d6e5d2cc5abafc37f3a",
                "parameters": [
                    {
                        "name": "coupon_id",
                        "in": "query",
                        "description": "Coupon ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "No coupon found!"
                    },
                    "400": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/api/my-coupons/delete/{id}": {
            "delete": {
                "tags": [
                    "My Coupon"
                ],
                "summary": "Delete a coupon",
                "description": "Delete a coupon",
                "operationId": "b31af53a771ad6b7bb0cbeaae002f76c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Coupon ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "No coupon found!"
                    }
                }
            }
        },
        "/api/users/get-info": {
            "get": {
                "tags": [
                    "Users Api"
                ],
                "summary": "Get user information from token",
                "description": "Get user information from token",
                "operationId": "8337713d7b6d00fac7f072e09f966a4e",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                }
            }
        },
        "/api/users/update-info": {
            "post": {
                "tags": [
                    "Users Api"
                ],
                "summary": "Update user information",
                "description": "Update user information",
                "operationId": "c8549a63e117d413102fe636d1a11e7e",
                "requestBody": {
                    "description": "Send user information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "full_name": {
                                        "type": "string",
                                        "example": "Nguyen Van A"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "nguyenvana@gmail.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "0909090909"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "Ha Noi"
                                    },
                                    "about": {
                                        "type": "string",
                                        "example": "abc"
                                    },
                                    "avatar": {
                                        "type": "string",
                                        "format": "binary",
                                        "example": "avatar.jpg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                }
            }
        },
        "/api/users/change_password": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Change password",
                "description": "Change password",
                "operationId": "e1c30fa016675b81ddf956d2e44e1687",
                "requestBody": {
                    "description": "User info",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "password_confirm": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter JWT token to access this API",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Coupon",
            "description": "Coupon"
        },
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Category",
            "description": "Category"
        },
        {
            "name": "Partner",
            "description": "Partner"
        },
        {
            "name": "Search",
            "description": "Search"
        },
        {
            "name": "Service",
            "description": "Service"
        },
        {
            "name": "Admin Category",
            "description": "Admin Category"
        },
        {
            "name": "Admin Partner Register",
            "description": "Admin Partner Register"
        },
        {
            "name": "Admin User",
            "description": "Admin User"
        },
        {
            "name": "Partner Service",
            "description": "Partner Service"
        },
        {
            "name": "Cart",
            "description": "Cart"
        },
        {
            "name": "My Coupon",
            "description": "My Coupon"
        },
        {
            "name": "Users Api",
            "description": "Users Api"
        },
        {
            "name": "User",
            "description": "User"
        }
    ]
}